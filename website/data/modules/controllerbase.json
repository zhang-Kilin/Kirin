{
	"name":"ControllerBase",
	"file":{
		"path":"app/ControllerBase.js",
		"version":"0.1",
		"author":"zhang_7150@163.com",
		"description":"控制器Controller的基类，用于数据处理，启动视图渲染",
		"updatetime":"2015-11-25"
	},
	"apis":{
		"Members":{
			"name":{
				"qualifier":"",
				"arguments":"",
				"returnType":"string",
				"description":"当前controller的名称，如果exec方法未返回要渲染的view，将默认查找同名的view进行渲染"
			},
			"model":{
				"qualifier":"",
				"arguments":"",
				"returnType":"Object",
				"description":"[link=modelbase]ModelBase[/link] 的实例，作为传递给View的数据载体"
			},
			"context":{
				"qualifier":"",
				"arguments":"",
				"returnType":"Object",
				"description":"当前请求的上下文",
				"parameters":{
					"url":{
						"type":"Url",
						"description":"当前请求的url的封装，见 [link=url]Url[/link]"
					},
					"router":{
						"type":"Router",
						"description":"全局Router对象的实例，见 [link=router]Router[/link]"
					},
					"app":{
						"type":"Application",
						"description":"全局应用程序管理类，见 [link=application]Application[/link]"
					}
				}
			},
			"App":{
				"qualifier":"",
				"arguments":"",
				"returnType":"Application",
				"description":"全局应用程序管理类，见 [link=application]Application[/link]"
			},
			"route":{
				"qualifier":"",
				"arguments":"",
				"returnType":"Object",
				"description":"当前匹配到的路由规则，由 [link=application]Application.config[/link] 中配置的路由规则",
				"parameters":{
					"url_schema":{
						"type":"string|RegExp",
						"description":"路由规则"
					},
					"controller":{
						"type":"string|function",
						"description":"指向的Controller名称或当前路由的处理函数"
					}
				}
			},
			"router":{
				"qualifier":"",
				"arguments":"",
				"returnType":"Router",
				"description":"全局Router对象的实例，见 [link=router]Router[/link]"
			},
			"url":{
				"qualifier":"",
				"arguments":"",
				"returnType":"Url",
				"description":"当前请求的url的封装，见 [link=url]Url[/link]"
			}
		},
		"Instance Methods":{
			"initialize":{
				"qualifier":"constructor",
				"arguments":"([arguments])",
				"returnType":"",
				"description":"提供给子类的构造函数代理",
				"parameters":{
					"arguments":{
						"type":"Object",
						"description":"参数列表，通常为当前请求的上下文Context"
					}
				}
			},
			"_init":{
				"qualifier":"private",
				"arguments":"(context)",
				"returnType":"",
				"description":"由自身调用的初始化函数，负责当前controller参数和状态的初始化操作，禁止子类调用"
			},
			"_render":{
				"qualifier":"private",
				"arguments":"()",
				"returnType":"",
				"description":"由自身调用的启动视图渲染函数，禁止子类调用"
			},
			"_execute":{
				"qualifier":"private",
				"arguments":"(context)",
				"returnType":"",
				"description":"执行controller，由系统调用，禁止子类中调用或改写该函数",
				"parameters":{
					"arguments":{
						"type":"string",
						"description":"路由规则中和当前url中解析到的参数列表"
					}
				}
			},
			"exec":{
				"qualifier":"abstract",
				"arguments":"([arguments])",
				"returnType":"",
				"description":"提供给子类的路由处理函数，子类中必须重写",
				"parameters":{
					"arguments":{
						"type":"string",
						"description":"路由规则中和当前url中解析到的参数列表"
					}
				},
				"example":{
					"type":"javascript",
					"path":"controllerbase.exec.js"
				}
			},
			"redirect":{
				"qualifier":"",
				"arguments":"(controllerName,[arguments])",
				"returnType":"",
				"description":"用于重定向，不改变当前的url地址，从第二个参数开始为需要传递给新的controller的参数列表",
				"parameters":{
					"controllerName":{
						"type":"string",
						"description":"要重定向的controller名称"
					},
					"arguments":{
						"type":"Object",
						"description":"传递给下一个controller的参数列表"
					}
				}
			},
			"assign":{
				"qualifier":"",
				"arguments":"(url)",
				"returnType":"",
				"description":"用于重定向，会改变当前的url地址，该函数不接受参数传递",
				"parameters":{
					"url":{
						"type":"string",
						"description":"当前要重定向的url"
					}
				}
			},
			"view":{
				"qualifier":"",
				"arguments":"(viewName)",
				"returnType":"",
				"description":"根据当前提供的viewName查找对应的View，不要重写该方法，如果需要自定义查找View，请使用 [link=engines]Engines[/link]",
				"parameters":{
					"viewName":{
						"type":"string",
						"description":"当前要渲染的View名称"
					}
				}
			}
		},
		"Methods":{
			"execute":{
				"qualifier":"static",
				"arguments":"(controllerName,context)",
				"returnType":"",
				"description":"根据提供的controllerName查找对应的controller并解析执行，该函数为系统级别的，不推荐用户调用",
				"parameters":{
					"controllerName":{
						"type":"string",
						"description":"要执行的controller名称"
					},
					"context":{
						"type":"Object",
						"description":"当前请求的上下文"
					}
				}
			},
			"extend":{
				"qualifier":"static",
				"arguments":"(prototype,staticProps)",
				"returnType":"ControllerBase",
				"description":"用于继承产生子类",
				"parameters":{
					"prototype":{
						"type":"Object",
						"description":"原型"
					},
					"staticProps":{
						"type":"Object",
						"description":"静态属性"
					}
				}
			}
		},
		"Events":{
			"execute":{
				"qualifier":"event",
				"arguments":"(context,controller,args)",
				"returnType":"",
				"description":"当controller被执行之前触发",
				"parameters":{
					"context":{
						"type":"Object",
						"description":"当前请求的上下文"
					},
					"controller":{
						"type":"Controller",
						"description":"当前被执行的controller对象"
					},
					"args":{
						"type":"Array",
						"description":"当前controller执行中的参数列表"
					}
				}
			},
			"executed":{
				"qualifier":"event",
				"arguments":"(context,controller,args)",
				"returnType":"",
				"description":"当controller被执行之后触发",
				"parameters":{
					"context":{
						"type":"Object",
						"description":"当前请求的上下文"
					},
					"controller":{
						"type":"Controller",
						"description":"当前被执行的controller对象"
					},
					"args":{
						"type":"Array",
						"description":"当前controller执行中的参数列表"
					}
				}
			}
		}
	},
	"example":{
		"type":"javascript",
		"path":"controllerbase.js"
	}
}